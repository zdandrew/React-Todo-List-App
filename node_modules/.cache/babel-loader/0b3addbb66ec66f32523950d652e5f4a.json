{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzhang/Dev/todo-list/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoListMain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have \", count, \" items in your list\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Enter new task\",\n        type: \"text\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setCount(count + 1);\n          setNewTask(\"\");\n          setTasks([...tasks, newTask]);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const newTasks = tasks.filter((item, index) => index !== i);\n            setTasks(newTasks);\n          },\n          children: task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"MthrYgxR4HoEMH1xLvtKOH7/JMc=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/andrewzhang/Dev/todo-list/src/TodoList.js"],"names":["React","useState","TodoList","count","setCount","tasks","setTasks","newTask","setNewTask","e","target","value","map","task","i","newTasks","filter","item","index"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACA;AAAA,gCAAaE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEE;AAAO,QAAA,WAAW,EAAC,gBAAnB;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEI,OAFT;AAGE,QAAA,QAAQ,EAAGE,CAAD,IAAOD,UAAU,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AACE,QAAA,OAAO,EAAE,MAAM;AACfP,UAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAK,UAAAA,UAAU,CAAC,EAAD,CAAV;AACAF,UAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWE,OAAX,CAAD,CAAR;AACC,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAgBE;AAAA;AAAA;AAAA;AAAA,cAhBF,EAmBGF,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACX;AAAA,+BACE;AACE,UAAA,OAAO,EAAE,MAAM;AACb,kBAAMC,QAAQ,GAAGV,KAAK,CAACW,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKJ,CAAxC,CAAjB;AACAR,YAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,WAJH;AAAA,oBAMKF;AANL;AAAA;AAAA;AAAA;AAAA;AADF,SAAUC,CAAV;AAAA;AAAA;AAAA;AAAA,cADC,CAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCuBZ,Q;;KAAAA,Q","sourcesContent":["\nimport React, {useState} from 'react'\n\nexport default function TodoList() {\n  const [count, setCount] = useState(0);\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  return (\n    <div className='todoListMain'>\n      <div className='header'>\n      <p>You have {count} items in your list</p>\n        <input placeholder='Enter new task'\n          type=\"text\"\n          value={newTask}\n          onChange={(e) => setNewTask(e.target.value)}>\n        </input>\n        <button\n          onClick={() => {\n          setCount(count + 1);\n          setNewTask(\"\");\n          setTasks([...tasks, newTask]);\n          }}\n          >\n          Add\n        </button>\n        <br />\n        \n        \n        {tasks.map((task, i) => (\n        <div key={i}>\n          <button\n            onClick={() => {\n              const newTasks = tasks.filter((item, index) => index !== i);\n              setTasks(newTasks);\n            }}\n          >\n              {task}\n          </button>\n        </div>\n      ))}\n\n      </div>\n    </div>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}