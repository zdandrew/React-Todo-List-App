{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzhang/Dev/todo-list/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Lists() {\n  _s();\n\n  const [newTask, setNewTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Part 2: Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNewTask(\"\");\n        setTasks([...tasks, newTask]);\n      },\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const newTasks = tasks.filter((item, index) => index !== i);\n          setTasks(newTasks);\n        },\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, i, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Lists, \"w+Jt+07/qo+z/oxhob+tc4Z5R8g=\");\n\n_c = Lists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"sources":["/Users/andrewzhang/Dev/todo-list/src/TodoList.js"],"names":["React","useState","Lists","newTask","setNewTask","tasks","setTasks","e","target","value","map","task","i","newTasks","filter","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEE,OAFT;AAGE,MAAA,QAAQ,EAAGI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAH7B;AAAA;AAAA;AAAA;AAAA,YAHF,eAQE;AACE,MAAA,OAAO,EAAE,MAAM;AACbL,QAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,QAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,OAAX,CAAD,CAAR;AACD,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAgBE;AAAA;AAAA;AAAA;AAAA,YAhBF,EAkBGE,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACT;AAAA,iBACGD,IADH,eAEE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,gBAAME,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKJ,CAAxC,CAAjB;AACAN,UAAAA,QAAQ,CAACO,QAAD,CAAR;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,YADD,CAlBH,eAgCE;AAAA;AAAA;AAAA;AAAA,YAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD;;GAxCuBV,K;;KAAAA,K","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nexport default function Lists() {\n  const [newTask, setNewTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n\n  return (\n    <div>\n      <h1>Part 2: Lists</h1>\n\n      <input\n        type=\"text\"\n        value={newTask}\n        onChange={(e) => setNewTask(e.target.value)}\n      />\n      <button\n        onClick={() => {\n          setNewTask(\"\");\n          setTasks([...tasks, newTask]);\n        }}\n      >\n        Add\n      </button>\n      <br />\n\n      {tasks.map((task, i) => (\n        <div key={i}>\n          {task}\n          <button\n            onClick={() => {\n              const newTasks = tasks.filter((item, index) => index !== i);\n              setTasks(newTasks);\n            }}\n          >\n            Remove\n          </button>\n        </div>\n      ))}\n\n      <div></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}