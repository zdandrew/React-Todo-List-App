{"ast":null,"code":"var _jsxFileName = \"/Users/andrewzhang/Dev/todo-list/src/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n\n  const [newTask, setNewTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoListMain\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Enter new task\",\n          children: [\"type=\\\"text\\\" value=\", newTask, \"onChange=\", e => setNewTask(e.target.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setNewTask(\"\");\n            setTasks([...tasks, newTask]);\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), tasks.map((task, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [task, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const newTasks = tasks.filter((item, index) => index !== i);\n              setTasks(newTasks);\n            },\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"w+Jt+07/qo+z/oxhob+tc4Z5R8g=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/Users/andrewzhang/Dev/todo-list/src/TodoList.js"],"names":["React","useState","TodoList","newTask","setNewTask","tasks","setTasks","e","target","value","map","task","i","newTasks","filter","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA,gCACE;AAAO,UAAA,WAAW,EAAC,gBAAnB;AAAA,6CAESE,OAFT,eAGaI,CAAD,IAAOH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAQ,UAAA,OAAO,EAAE,MAAM;AACrBL,YAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,YAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWF,OAAX,CAAD,CAAR;AACH,WAHC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,eAWA;AAAA;AAAA;AAAA;AAAA,gBAXA,EAaCE,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,CAAP,kBACX;AAAA,qBACKD,IADL,eAEI;AACA,YAAA,OAAO,EAAE,MAAM;AACX,oBAAME,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiBA,KAAK,KAAKJ,CAAxC,CAAjB;AACAN,cAAAA,QAAQ,CAACO,QAAD,CAAR;AACH,aAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA,WAAUD,CAAV;AAAA;AAAA;AAAA;AAAA,gBADC,CAbD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GApCuBV,Q;;KAAAA,Q","sourcesContent":["import React, { useState} from 'react'\n\nexport default function TodoList() {\n  const [newTask, setNewTask] = useState(\"\");\n  const [tasks, setTasks] = useState([]);\n  return (\n    <div className='todoListMain'>\n      <div className='header'>\n        <form>\n          <input placeholder='Enter new task'>\n            type=\"text\"\n            value={newTask}\n            onChange={(e) => setNewTask(e.target.value)}\n          </input>\n          <button onClick={() => {\n            setNewTask(\"\");\n            setTasks([...tasks, newTask]);\n        }}\n        >Add</button>\n        <br />\n\n        {tasks.map((task, i) => (\n        <div key={i}>\n            {task}\n            <button\n            onClick={() => {\n                const newTasks = tasks.filter((item, index) => index !== i);\n                setTasks(newTasks);\n            }}\n            >\n            Remove\n            </button>\n        </div>\n        ))}\n        </form>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}